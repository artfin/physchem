beta <- 1
delta <- 2
func <- function(x, lim1, lim2, lim3) {
summ <- 0
for (m in 1 : lim1) {
for (n in 1 : lim2) {
for (p in 1 : lim3) {
summ <- summ + 1/ ( (2*m + 1)^2 * (2*n + 1)^2 * (2*p + 1)^2 * ( (2*m + 1)^2 + beta^2 * (2*n + 1)^2 + delta^2 *
(2*p + 1)^2 + x^2 / pi^2 ) )
}
}
}
res <- 1 - (8/pi)^3 * x^2 * summ
return(res)
}
x <- seq(-100, 100, 1)
plot(x, func(x, 10, 10, 10), type = "l", col = "darkorchid", lwd = 2)
# points(x, func(x, 10, 10, 10), pch = 19, col = "skyblue")
abline(h = 0, col = "coral", lwd = 2, lty = 2)
B = 89740.46 * 10^6 / 29.979 / 10^10 / 2
plank = 6.62607004 * 10^(-34)
light_speed = 2.99792458 * 10^10
mu = 6 *  19/ (19 + 6) * 1.660539040 * 10^(-27)
l = sqrt(plank / (8 * pi * light_speed * mu * B))
l
l = sqrt(plank / (8 * pi^2 * light_speed * mu * B))
l
B
B = 89740.46 * 10^6 / 2.9979 / 10^10 / 2
plank = 6.62607004 * 10^(-34)
light_speed = 2.99792458 * 10^10
mu = 6 *  19/ (19 + 6) * 1.660539040 * 10^(-27)
l = sqrt(plank / (8 * pi^2 * light_speed * mu * B))
l
B = 89740.46 * 10^6 / light_speed / 2
light_speed = 2.99792458 * 10^10
B = 89740.46 * 10^6 / light_speed / 2
plank = 6.62607004 * 10^(-34)
mu = 6 *  19/ (19 + 6) * 1.660539040 * 10^(-27)
l = sqrt(plank / (8 * pi^2 * light_speed * mu * B))
l
mu = 7 *  19/ (19 + 7) * 1.660539040 * 10^(-27)
B1 = plank / (8 * pi * light_speed * mu * l^2)
B1 * light_speed / 10^4
B1 = plank / (8 * pi^2 * light_speed * mu * l^2)
B1 * light_speed / 10^4
B
light_speed = 2.99792458 * 10^10
B = 89740.46 * 10^6 / light_speed / 2
B
l
mu1 = 6 * 19 / (19 + 6) * 1.660539040 * 10^(-27)
mu2 = 7 *  19/ (19 + 7) * 1.660539040 * 10^(-27)
B1 = plank / (8 * pi^2 * light_speed * mu1 * l^2)
B2 = plank / (8 * pi^2 * light_speed * mu2 * l^2)
B1
B2
B1 = plank / (8 * pi^2 * light_speed * mu1 * l^2) * light_speed
B1
B1 = plank / (8 * pi^2 * light_speed * mu1 * l^2) * light_speed * 2
B1
B1 = plank / (8 * pi^2 * light_speed * mu1 * l^2) * light_speed * 2 / 10^6
B1 = plank / (8 * pi^2 * light_speed * mu1 * l^2) * light_speed * 2 / 10^6
B1
B2 = plank / (8 * pi^2 * light_speed * mu2 * l^2) * light_speed * 2 / 10^6
B2
I = (12 * 0.7^2 + 14 * 1.85^2 + 12 * 0.7^2 + 12 * 1.9^2 + 9) * 1.660539040 * 10^(-27) * 10^-20
B3 =  plank / (8 * pi^2 * light_speed * I)
B3
B3 =  plank / (8 * pi^2 * light_speed * I) * light_speed * 2 / 10^6
B3
B3 =  plank / (8 * pi^2 * light_speed * I) * light_speed  / 10^6
B3
B3 =  plank / (8 * pi^2 * light_speed * I)
B3
B3 =  plank / (8 * pi^2 * light_speed * I) * light_speed  / 10^6
B3
I = 16 * 1.2^2 * 2 * 1.660539040 * 10^(-27) * 10^(-20)
I
B4 = plank / (8 * pi^2 * light_speed * I4) * light_speed / 10^6
I4 = 16 * 1.2^2 * 2 * 1.660539040 * 10^(-27) * 10^(-20)
B4 = plank / (8 * pi^2 * light_speed * I4) * light_speed / 10^6
B4
B4 / 1000
I5 = 32 * 1.6^2 * 2 * 1.660539040 * 10^(-27) * 10^(-20)
calculate_rotational_constant <- function(I) {
B = plank / (8 * pi^2 * light_speed * I) * light_speed  / 10^6
return(B)
}
B4 = calculate_rotational_constant(I4)
calculate_rotational_constant <- function(I) {
B = plank / (8 * pi^2 * light_speed * I) * light_speed  / 10^6
print(B)
return(B)
}
B4 = calculate_rotational_constant(I4)
B5 = calculate_rotational_constant(I5)
I6 = (32 * 1.6^2 + 16 * 1.2^2) * 1.660539040 * 10^(-27) * 10^(-20)
B6 = calculate_rotational_constant(I6)
I5
B4
I6
- 16 * 1.202 * cos(130.6/360*pi) + 35 * 1.84
(- 16 * 2 * 1.202 * cos(130.6/360*pi) + 35 * 1.84) / (35 + 16 + 16 + 14)
1.840 - 0.597
-1.202 * sin(130.6 / 360 * pi)
-1.202 * cos(130.6 / 360 * pi)
1.092^2 + 0.502^2
1.202^2
-1.202 * cos(130.6 / 360 * pi) - 0.59
Iaa = 35 * 1.243^2 + 14 * 0.597^2 + 16 * 1.092^2 * 2
Ibb = 16 * 1.092^2 * 2
Icc = Iaa + Ibb
Iaa
Ibb
Icc
Iaa = (35 * 1.243^2 + 14 * 0.597^2 + 16 * 1.092^2 * 2) * 1.660539040 * 10^(-27) * 10^(-20)
Ibb = (16 * 1.092^2 * 2) * 1.660539040 * 10^(-27) * 10^(-20)
Icc = Iaa + Ibb
Iaa
Ibb
icc
Icc
A = calculate_rotational_constant(Iaa)
Iaa
calculate_rotational_constant(I4)
B = calculate_rotational_constant(Ibb)
C = calculate_rotational_constant(Icc)
