#if (p[i] < 0) {
#  p[i] <- 0
#}
#p <- p[p != 0]
#for (i in 1 : (N - length(p))) {
#  V <- V[-i]
#}
par(mfrow = c(1,1))
plot(V, p, main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0,10))
for (s in 1 : length(p)) {
if (p[s] < 0) {
print(s)
}
}
V <- array()
p <- array()
Temp <- 100
a <- 3.592
b <- 0.04267
V[1] <- b + 0.001
for (i in 2 : 10000) {
V <- c(V, b + 0.001 * i)
}
p <- (0.082 * Temp) / (V - b) - a / (V * V)
#if (p[i] < 0) {
#  p[i] <- 0
#}
#p <- p[p != 0]
#for (i in 1 : (N - length(p))) {
#  V <- V[-i]
#}
par(mfrow = c(1,1))
plot(V, p, main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(-10,10))
for (s in 1 : length(p)) {
if (p[s] < 0) {
print(s)
}
}
V <- array()
p <- array()
Temp <- 250
a <- 3.592
b <- 0.04267
V[1] <- b + 0.001
for (i in 2 : 10000) {
V <- c(V, b + 0.001 * i)
}
p <- (0.082 * Temp) / (V - b) - a / (V * V)
#if (p[i] < 0) {
#  p[i] <- 0
#}
#p <- p[p != 0]
#for (i in 1 : (N - length(p))) {
#  V <- V[-i]
#}
par(mfrow = c(1,1))
plot(V, p, main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(-10,10))
for (s in 1 : length(p)) {
if (p[s] < 0) {
print(s)
}
}
V <- array()
p <- array()
Temp <- 200
a <- 3.592
b <- 0.04267
V[1] <- b + 0.001
for (i in 2 : 10000) {
V <- c(V, b + 0.001 * i)
}
p <- (0.082 * Temp) / (V - b) - a / (V * V)
#if (p[i] < 0) {
#  p[i] <- 0
#}
#p <- p[p != 0]
#for (i in 1 : (N - length(p))) {
#  V <- V[-i]
#}
par(mfrow = c(1,1))
plot(V, p, main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(-10,10))
for (s in 1 : length(p)) {
if (p[s] < 0) {
print(s)
}
}
V <- array()
p <- array()
Temp <- 160
a <- 3.592
b <- 0.04267
V[1] <- b + 0.001
for (i in 2 : 10000) {
V <- c(V, b + 0.001 * i)
}
p <- (0.082 * Temp) / (V - b) - a / (V * V)
#if (p[i] < 0) {
#  p[i] <- 0
#}
#p <- p[p != 0]
#for (i in 1 : (N - length(p))) {
#  V <- V[-i]
#}
par(mfrow = c(1,1))
plot(V, p, main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(-10,10))
for (s in 1 : length(p)) {
if (p[s] < 0) {
print(s)
}
}
V <- array()
p <- array()
Temp <- 170
a <- 3.592
b <- 0.04267
V[1] <- b + 0.001
for (i in 2 : 10000) {
V <- c(V, b + 0.001 * i)
}
p <- (0.082 * Temp) / (V - b) - a / (V * V)
#if (p[i] < 0) {
#  p[i] <- 0
#}
#p <- p[p != 0]
#for (i in 1 : (N - length(p))) {
#  V <- V[-i]
#}
par(mfrow = c(1,1))
plot(V, p, main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(-10,10))
for (s in 1 : length(p)) {
if (p[s] < 0) {
print(s)
}
}
V <- array()
p <- array()
Temp <- 170
a <- 3.592
b <- 0.04267
V[1] <- b + 0.001
for (i in 2 : 10000) {
V <- c(V, b + 0.001 * i)
}
p <- (0.082 * Temp) / (V - b) - a / (V * V)
#if (p[i] < 0) {
#  p[i] <- 0
#}
#p <- p[p != 0]
#for (i in 1 : (N - length(p))) {
#  V <- V[-i]
#}
par(mfrow = c(1,1))
plot(V, p, main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0,10))
for (s in 1 : length(p)) {
if (p[s] < 0) {
print(s)
}
}
V <- array()
p <- array()
Temp <- 170
a <- 3.592
b <- 0.04267
V[1] <- b + 0.001
for (i in 2 : 10000) {
V <- c(V, b + 0.001 * i)
}
p <- (0.082 * Temp) / (V - b) - a / (V * V)
#if (p[i] < 0) {
#  p[i] <- 0
#}
#p <- p[p != 0]
#for (i in 1 : (N - length(p))) {
#  V <- V[-i]
#}
par(mfrow = c(1,1))
plot(V, p, main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0,20))
for (s in 1 : length(p)) {
if (p[s] < 0) {
print(s)
}
}
q <- generate_arrays(100)
generate_arrays <- function(Temp) {
x <- array()
y <- array()
x[1] <- b + 0.001
for (i in 2 : 10000) {
x <- c(x, b + 0.001 * i)
}
y <- (0.082 * Temp) / (x - b) - a / (x * x)
res <- list()
res[[1]] <- x
res[[2]] <- y
return(res)
}
q <- generate_arrays(100)
q
plot(q[[1]], q[[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0,20))
q <- list()
q <- list()
for (i in 1 : 4) {
q[[i]] <- generate_arrays(i * 50)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0,20))
points(q[[2]][[1]], q[[2]][[2]], pch = 16)
points(q[[2]][[1]], q[[2]][[2]], pch = 16, col = 1)
points(q[[2]][[1]], q[[2]][[2]], pch = 16, col = 1)
points(q[[2]][[1]], q[[2]][[2]], pch = 16, col = 2)
points(q[[3]][[1]], q[[3]][[2]], pch = 16, col = 3)
points(q[[4]][[1]], q[[4]][[2]], pch = 16, col = 4)
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0,20))
points(q[[2]][[1]], q[[2]][[2]], type = "l", col = 2)
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0,20))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0,20))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(-5,20))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(-50,20))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
x <- b + 0.001
y <- (0.082 * Temp) / (x - b) - a / (x * x)
y
x <- b + 0.01
y <- (0.082 * Temp) / (x - b) - a / (x * x)
y
x <- b + 0.05
y <- (0.082 * Temp) / (x - b) - a / (x * x)
y
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(-10,20))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
generate_arrays <- function(Temp) {
x <- array()
y <- array()
x[1] <- b + 0.001
for (i in 2 : 1000) {
x <- c(x, b + 0.001 * i)
}
y <- (0.082 * Temp) / (x - b) - (a / (x * x))
res <- list()
res[[1]] <- x
res[[2]] <- y
return(res)
}
q <- list()
for (i in 1 : 4) {
q[[i]] <- generate_arrays(i * 50)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(-10,20))
generate_arrays <- function(Temp) {
x <- array()
y <- array()
x[1] <- b + 0.001
for (i in 2 : 10000) {
x <- c(x, b + 0.001 * i)
}
y <- (0.082 * Temp) / (x - b) - (a / (x * x))
res <- list()
res[[1]] <- x
res[[2]] <- y
return(res)
}
q <- list()
for (i in 1 : 4) {
q[[i]] <- generate_arrays(i * 50)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(-10,20))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
x <- b + 0.05
y <- (0.082 * Temp) / (x - b) - a / (x * x)
x <- b + 0.05
Ñ‡
x
y <- (0.082 * Temp) / (x - b) - (a / (x * x))
y
(0.082 * Temp) / (x - b)
a / (x* x)
y <- (8.314 * Temp) / (x - b) - (a / (x * x))
generate_arrays <- function(Temp) {
x <- array()
y <- array()
x[1] <- b + 0.001
for (i in 2 : 10000) {
x <- c(x, b + 0.001 * i)
}
y <- (8.314 * Temp) / (x - b) - (a / (x * x))
res <- list()
res[[1]] <- x
res[[2]] <- y
return(res)
}
q <- list()
for (i in 1 : 4) {
q[[i]] <- generate_arrays(i * 50)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(-10,20))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 100))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
generate_arrays <- function(Temp) {
x <- array()
y <- array()
x[1] <- b + 0.001
for (i in 2 : 10000) {
x <- c(x, b + 0.001 * i)
}
y <- (0.082 * Temp) / (x - b) - (a / (x * x))
res <- list()
res[[1]] <- x
res[[2]] <- y
return(res)
}
q <- list()
for (i in 1 : 4) {
q[[i]] <- generate_arrays(i * 50)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 100))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 100), ylim = c(0, 10))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
q <- list()
for (i in 1 : 4) {
q[[i]] <- generate_arrays(i * 50)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0, 10))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
generate_arrays <- function(Temp) {
x <- array()
y <- array()
x[1] <- b + 0.001
for (i in 2 : 10000) {
x <- c(x, b + 0.001 * i)
}
y <- (0.82* Temp) / (x - b) - (a / (x * x))
res <- list()
res[[1]] <- x
res[[2]] <- y
return(res)
}
q <- list()
for (i in 1 : 4) {
q[[i]] <- generate_arrays(i * 50)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0, 10))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0, 100))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
generate_arrays <- function(Temp) {
x <- array()
y <- array()
x[1] <- b + 0.001
for (i in 2 : 10000) {
x <- c(x, b + 0.001 * i)
}
y <- (0.042* Temp) / (x - b) - (a / (x * x))
res <- list()
res[[1]] <- x
res[[2]] <- y
return(res)
}
q <- list()
for (i in 1 : 4) {
q[[i]] <- generate_arrays(i * 50)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0, 100))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
generate_arrays <- function(Temp) {
x <- array()
y <- array()
x[1] <- b + 0.001
for (i in 2 : 10000) {
x <- c(x, b + 0.001 * i)
}
y <- (0.062* Temp) / (x - b) - (a / (x * x))
res <- list()
res[[1]] <- x
res[[2]] <- y
return(res)
}
q <- list()
for (i in 1 : 4) {
q[[i]] <- generate_arrays(i * 50)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0, 100))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0, 100))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
generate_arrays <- function(Temp) {
x <- array()
y <- array()
x[1] <- b + 0.001
for (i in 2 : 10000) {
x <- c(x, b + 0.001 * i)
}
y <- (0.42* Temp) / (x - b) - (a / (x * x))
res <- list()
res[[1]] <- x
res[[2]] <- y
return(res)
}
q <- list()
for (i in 1 : 4) {
q[[i]] <- generate_arrays(i * 50)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0, 100))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
generate_arrays <- function(Temp) {
x <- array()
y <- array()
x[1] <- b + 0.001
for (i in 2 : 10000) {
x <- c(x, b + 0.001 * i)
}
y <- (0.32* Temp) / (x - b) - (a / (x * x))
res <- list()
res[[1]] <- x
res[[2]] <- y
return(res)
}
q <- list()
for (i in 1 : 4) {
q[[i]] <- generate_arrays(i * 50)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0, 100))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
# x <- b + 0.05
# y <- (8.314 * Temp) / (x - b) - (a / (x * x))
generate_arrays <- function(Temp) {
x <- array()
y <- array()
x[1] <- b + 0.001
for (i in 2 : 10000) {
x <- c(x, b + 0.001 * i)
}
y <- (0.62* Temp) / (x - b) - (a / (x * x))
res <- list()
res[[1]] <- x
res[[2]] <- y
return(res)
}
q <- list()
for (i in 1 : 4) {
q[[i]] <- generate_arrays(i * 50)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0, 100))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
# x <- b + 0.05
# y <- (8.314 * Temp) / (x - b) - (a / (x * x))
generate_arrays <- function(Temp) {
x <- array()
y <- array()
x[1] <- b + 0.001
for (i in 2 : 10000) {
x <- c(x, b + 0.001 * i)
}
y <- (0.082* Temp) / (x - b) - (a / (x * x))
res <- list()
res[[1]] <- x
res[[2]] <- y
return(res)
}
q <- list()
for (i in 1 : 4) {
q[[i]] <- generate_arrays(i * 50)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0, 100))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
plot(q[[1]][[1]], q[[1]][[2]], main = "vdW", xlab = "V", ylab = "p", type = "l", xlim = c(0, 10), ylim = c(0, 10))
for (i in 1 : 4) {
points(q[[i]][[1]], q[[i]][[2]], type = "l", col= i, lwd = 2)
}
